name: Lint

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10"]
        poetry-version: ["1.7.1"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(f'Python {sys.version} on {sys.platform}')"

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2
      with:
        poetry-version: ${{ matrix.poetry-version }}

    - name: Cache Poetry virtualenv
      uses: actions/cache@v4
      id: cache
      with:
        path: ./.venv
        key: poetry-lint-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          poetry-lint-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project true

    - name: Install Dependencies (with Lint)
      run: poetry install

    - name: Lint with flake8
      run: "poetry run flake8 ."

    - name: Check Formatting with Black
      run: "poetry run black . --check"

    - name: Static type-check with MyPy
      run: "poetry run mypy ."
